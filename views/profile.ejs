<%- include('partials/header') -%>
<div class="container">
 <!-- FIXED ACTION BUTTON -->
 <div class="fixed-action-btn">
  <a href="#" class="btn-floating red btn-large"><i class="large material-icons">mode_edit</i></a>
  <ul>
    <li><p class="right col s6 push-s1">
      <a href="/logout" class="btn-floating btn-large waves-effect waves-light red "> 
       EXIT </a></p></li>
    <li hidden><a href="#" class="btn-floating blue 
      btn-large">example</a></li>
    </ul>
</div>

<!-- Switch -->
<div class="switch center">
  <label> <span class="flow-text leaving">
    leaving spot</span>
    <input type="checkbox" name="statusValue" id="statusValue" onclick="switchFunction()"  >
    <span class="lever"></span>
    <span class="flow-text finding">
     finding spot</span>
  </label>
</div>

      <!-- map -->
  <div id="issMap"></div>
  <section id="laddress">Address: <section id="address"></section></section>
  <div class="row mt-5">

          <script>
        //first part of adding markers to group
        function myFunction() {
  alert("Submitted!");
}
       

        const mymap = L.map('issMap', {
          'center': [40.7279101090076, -73.9925114575458],
          'zoom': 14,
                
      });
      //
      //replace with NYC map
        const attribution =
          '&copy; <a href="https://maps{s}.nyc.gov/xyz/1.0.0/carto/basemap/{z}/{x}/{y}.jpg">OpenStreetMap</a> contributors';
  
        const tileUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
        const tiles = L.tileLayer(tileUrl, { attribution });
        tiles.addTo(mymap);
        //second part of adding markers to layer
        //mymap.layers=[mymap,marky]
        // Making a marker with a custom icon
        var greenIcon = L.icon({
          iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-green.png',
          shadowUrl: 'https://leafletjs.com/examples/custom-icons/leaf-shadow.png',
      
          iconSize:     [38, 40], // size of the icon
          shadowSize:   [50, 30], // size of the shadow
          iconAnchor:   [22, 41], // point of the icon which will correspond to marker's location
          shadowAnchor: [4, 31],  // the same for the shadow
          popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
      });
      var redIcon = L.icon({
          iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-red.png',
          shadowUrl: 'https://leafletjs.com/examples/custom-icons/leaf-shadow.png',
      
          iconSize:     [38, 40], // size of the icon
          shadowSize:   [50, 30], // size of the shadow
          iconAnchor:   [22, 41], // point of the icon which will correspond to marker's location
          shadowAnchor: [4, 31],  // the same for the shadow
          popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
      });
     
      //Leaflet another Draw Event
      var marker;
//add leaving spot marker
var clicks = 0; // counter 
  mymap.on('click', function(event){
            console.log(clicks++)//only one marker per user delete last marker using counter
            document.getElementById("latitude").innerHTML = event.latlng.lat;
             document.getElementById("longitude").innerHTML = event.latlng.lng;
            //  window.open("https://www.waze.com/ul?ll=40.75889500%2C-73.98513100&navigate=yes&zoom=17");
             document.getElementById('theFormId').setAttribute('action', `/coordinate/${event.latlng.lat}/${event.latlng.lng}?_method=PUT`);
           

            if (clicks>1) {
              mymap.removeLayer(marker); // remove extra marker when leavin spot
              }       //tag username to marker
            const Uname = document.getElementById("userName")
            if(switchFunction()==false){
            marker= L.marker([event.latlng.lat, event.latlng.lng], 
            {icon: greenIcon,
              draggable: false,
              autoPan: true,
                  
            }).bindTooltip(Uname,
            {
                permanent: true,
                direction: 'right'
                
            }).addTo(mymap).on('click', function(e) {
              //alert("Lat, Lon : " + e.latlng.lat + ", " + e.latlng.lng);
              document.getElementById("latitude").innerHTML = e.latlng.lat;
              
            });}})
</script>
  <!-- end of leaving spot marker  -->
   <!-- switch for leaving and finding spot     -->
      <div class="right"> <form id=theFormId 
        method="POST" 
              class="col-1"
             ><button id="theFormIda" class="btn-floating yellow darken-4 btn-large" onclick="myFunction()" type="submit">submit</button>
            </form>
          </div>

    </div class="left"><br>
    <div >latitude: <span id="latitude"></span></div><br>
    <div>longitude: <span id="longitude"></span></div>
    <section class="right row">
        <div class="col s20 push-s1000">
            <p hidden><span id="userName">User Name: <%= userName %></span></p>
            
  <script>
              const myElement = document.getElementById("");
                      
              L.control.locate(
                {
                  flyTo: true,
                  strings: {title: "Zoom to current location"},
                  icon: "fa fa-map-pin",
                  locateOptions: {maxZoom: 16}
                }
              ).addTo(mymap);
</script>
<!-- draw  all flags -->

 
 
    <ul>
  <% larea.forEach(el =>{%>

    <li class="col-6 justify-content-between mt-5 " data-id='<%=el._id%>'>
      
       <script>
 
        var lad= <%= el.lad %>
        var lon= <%= el.lon %>
        var userName= "<%= el.userName %>"
        marker = L.marker([ lon,lad], {
        icon: redIcon 
       
     })
     .addTo(mymap)
     .openPopup()
     .bindTooltip(userName,
        {
            permanent: true,
            direction: 'right'
          
        })
        .addTo(mymap).on('click', function(el){  $.get(`https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${el.lon}&lon=${el.lad}`, 
        
        function(data){console.log(data.address.house_number, data.address.road, data.address.city);
         
          document.getElementById("address").innerHTML = data.address.house_number+" "+ data.address.road+" "+data.address.city});})
         
        </script>
      </li>
    <%})%>
  </ul>
    
  
  <script>
  //switch graying out or hidding submit button
      function switchFunction(){
      //checkbox value
      var isChecked = document.getElementById('statusValue').checked; 
      
      const element = document.getElementById("theFormIda");
      if(document.getElementById('statusValue').checked==true){              
                    element.classList.add("disabled");
                  console.log('a')}
        else{element.classList.remove("disabled");
        console.log('c');
        
        
        
      }
    
    
    return isChecked;}
    
    
    
    
    
    </script>
    </div>
  </div>
   
</div>


<%- include('partials/footer') -%>